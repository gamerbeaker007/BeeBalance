name: Run Tests and Coverage

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  lint:
    name: Flake8 Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Flake8 (without complexity check failing CI)
        run: flake8 --ignore=C901

  complexity_check:
    name: Complexity Warnings
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Complexity Check
        id: complexity_check
        run: |
          WARNINGS=$(flake8 --select=C901 | tee complexity_warnings.log | wc -l)
          echo "Number of complexity warnings: $WARNINGS"
          echo "Complexity warnings detected: $WARNINGS" >> $GITHUB_STEP_SUMMARY
          if [ "$WARNINGS" -gt 0 ]; then
            echo "Flake8 Complexity warnings detected ❌"
            echo "::set-output name=status::failure"
          else
            echo "No complexity warnings ✅"
            echo "::set-output name=status::success"
          fi

      - name: Mark Job as Successful but Warn in Logs
        if: steps.complexity_check.outputs.status == 'failure'
        run: |
          echo "Flake8 Complexity warnings detected! Marking as warning instead of failure."
          exit 0
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Change this if needed

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Run Tests and Measure Coverage
        run: pytest

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}  # Set this in your repository secrets
